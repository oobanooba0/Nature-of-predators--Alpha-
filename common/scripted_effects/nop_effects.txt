# set up starting pops - called by nop.1
# this = planet, capital
generate_origin_arxur_start_pops = {
	# logging that will appear in game.log - this can be removed
	log = "generate_origin_nop_example_start_pops on \\[This.GetName] for \\[This.Owner.GetRealName]"
	# spawn a set number of main species Pops
	while = {
		count = 16 # change this number to control how many main species Pops are spawned
		# default Pop counts (last verified for 3.1.2 "Lem"):
		# 16 for Syncretic Evolution or regular, non-genocidal Necrophage; 12 secondary (28 total)
		# 24 for Hive Mind non-genocidal Necrophages; 9 secondary (33 total)
		# 24 for regular genocidal Necrophages; 6 secondary (30 total)
		# 29 for Hive Mind genocidal Necrophages; 6 secondary (35 total)
		# 20 for Mechanists; 8 secondary (28 total)
		# 19 for Driven Assimilators; 10 secondary (29 total)
		# 28 for Rogue Servitors; 5 secondary (33 total)
		# +4 for Prosperous Unification (DA and RS are civics, and can thus be combined with this origin to get the 4 bonus main species Pops)
		# default Pop counts for origins/civics with primary species only (i.e. most of them):
		# 28 for regular empires
		# 33 for Hive Minds
		# 29 for Machines
		# +4 for Prosperous Unification
		create_pop = {
			species = owner_main_species
			ethos = random
		}
	}
	# set the default secondary species flag and save an event_target - which can be used in the event after this effect executes
	last_created_species = {
		set_species_flag = syncretic_species@PREV.owner
		save_event_target_as = secondary_species
	}
	# spawn secondary species Pops until we hit the maximum
	while = {
		limit = { num_pops < 28 } # change this number to change the total number of Pops spawned
		create_pop = {
			species = event_target:secondary_species
			ethos = random
		}
	}
	# CAUTION: if your origin allows Machine Intelligences, you should consider explicitly disallowing the
	# Driven Assimilator and Rogue Servitor civics that also are eligible for a secondary species.  If not, you
	# may need to reimplement code from the default "generate_start_pops" effect related to their custom setup.
	# This also applies when you create any features that replace default Pop setup - you'll need to reimplement
	# a compatible version of Pop spawning code for any secondary species civics/origins that your mod allows the
	# player to combine with your new features.
}